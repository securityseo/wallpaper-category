{"ast":null,"code":"var _jsxFileName = \"/Users/oquvchi/Documents/GitHub/wallpaper-category/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Products from \"./Products/Products\";\nimport products from \"./db/data\";\nimport Sidebar from \"./Sidebar/Sidebar\";\nimport Card from \"./components/Card\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const handleChange = event => {\n    setSelectedCategory(event.target.value);\n  };\n  function filteredData(products, selected) {\n    let filteredProducts = products;\n    if (selected) {\n      filteredProducts = filteredProducts.filter(_ref => {\n        let {\n          category,\n          color,\n          company,\n          newPrice,\n          title\n        } = _ref;\n        return category === selected || color === selected || company === selected || newPrice === selected || title === selected;\n      });\n    }\n    return filteredProducts.map(_ref2 => {\n      let {\n        img,\n        title,\n        prevPrice,\n        newPrice\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Card, {\n        img: img,\n        title: title,\n        prevPrice: prevPrice,\n        newPrice: newPrice\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this);\n    });\n  }\n  const result = filteredData(products, selectedCategory);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      handleChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Products, {\n      result: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"RgHDLEuJ1Ja2GayX64Y/niiK+6s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Products","products","Sidebar","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","selectedCategory","setSelectedCategory","handleChange","event","target","value","filteredData","selected","filteredProducts","filter","_ref","category","color","company","newPrice","title","map","_ref2","img","prevPrice","Math","random","fileName","_jsxFileName","lineNumber","columnNumber","result","children","_c","$RefreshReg$"],"sources":["/Users/oquvchi/Documents/GitHub/wallpaper-category/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport Products from \"./Products/Products\";\nimport products from \"./db/data\";\nimport Sidebar from \"./Sidebar/Sidebar\";\nimport Card from \"./components/Card\";\nimport \"./index.css\";\n\nfunction App() {\n  const [selectedCategory, setSelectedCategory] = useState(null);\n\n\n\n  \n\n\n  const handleChange = (event) => {\n    setSelectedCategory(event.target.value);\n  };\n\n\n\n  function filteredData(products, selected) {\n    let filteredProducts = products;\n\n\n\n    if (selected) {\n      filteredProducts = filteredProducts.filter(\n        ({ category, color, company, newPrice, title }) =>\n          category === selected ||\n          color === selected ||\n          company === selected ||\n          newPrice === selected ||\n          title === selected\n      );\n    }\n\n    return filteredProducts.map(\n      ({ img, title, prevPrice, newPrice }) => (\n        <Card\n          key={Math.random()}\n          img={img}\n          title={title}\n          prevPrice={prevPrice}\n          newPrice={newPrice}\n        />\n      )\n    );\n  }\n\n  const result = filteredData(products, selectedCategory);\n\n  return (\n    <>\n      <Sidebar handleChange={handleChange} />\n      <Products result={result} />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAO9D,MAAMa,YAAY,GAAIC,KAAK,IAAK;IAC9BF,mBAAmB,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACzC,CAAC;EAID,SAASC,YAAYA,CAACf,QAAQ,EAAEgB,QAAQ,EAAE;IACxC,IAAIC,gBAAgB,GAAGjB,QAAQ;IAI/B,IAAIgB,QAAQ,EAAE;MACZC,gBAAgB,GAAGA,gBAAgB,CAACC,MAAM,CACxCC,IAAA;QAAA,IAAC;UAAEC,QAAQ;UAAEC,KAAK;UAAEC,OAAO;UAAEC,QAAQ;UAAEC;QAAM,CAAC,GAAAL,IAAA;QAAA,OAC5CC,QAAQ,KAAKJ,QAAQ,IACrBK,KAAK,KAAKL,QAAQ,IAClBM,OAAO,KAAKN,QAAQ,IACpBO,QAAQ,KAAKP,QAAQ,IACrBQ,KAAK,KAAKR,QAAQ;MAAA,CACtB,CAAC;IACH;IAEA,OAAOC,gBAAgB,CAACQ,GAAG,CACzBC,KAAA;MAAA,IAAC;QAAEC,GAAG;QAAEH,KAAK;QAAEI,SAAS;QAAEL;MAAS,CAAC,GAAAG,KAAA;MAAA,oBAClCtB,OAAA,CAACF,IAAI;QAEHyB,GAAG,EAAEA,GAAI;QACTH,KAAK,EAAEA,KAAM;QACbI,SAAS,EAAEA,SAAU;QACrBL,QAAQ,EAAEA;MAAS,GAJdM,IAAI,CAACC,MAAM,CAAC,CAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKnB,CAAC;IAAA,CAEN,CAAC;EACH;EAEA,MAAMC,MAAM,GAAGpB,YAAY,CAACf,QAAQ,EAAES,gBAAgB,CAAC;EAEvD,oBACEL,OAAA,CAAAE,SAAA;IAAA8B,QAAA,gBACEhC,OAAA,CAACH,OAAO;MAACU,YAAY,EAAEA;IAAa;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvC9B,OAAA,CAACL,QAAQ;MAACoC,MAAM,EAAEA;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC5B,CAAC;AAEP;AAAC1B,EAAA,CAnDQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}